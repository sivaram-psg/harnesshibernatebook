<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                                   "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
 <class name="com.oreilly.hh.data.Track" table="track">
  <meta attribute="class-description">Represents a single playable track in the music database.
      @author Jim Elliott (with help from Hibernate)</meta>
  <id column="TRACK_ID" name="id" type="int">
   <meta attribute="scope-set">protected</meta>
   <generator class="native"/>
  </id>
  <property generated="never" lazy="false" name="title" type="string">
   <meta attribute="use-in-tostring">true</meta>
   <column index="TRACK_TITLE" name="TITLE" not-null="true"/>
  </property>
  <property generated="never" lazy="false" name="filePath"
   not-null="true" type="string"/>
  <property generated="never" lazy="false" name="playTime" type="time">
   <meta attribute="field-description">Playing time</meta>
  </property>
  <set name="artists" sort="unsorted" table="TRACK_ARTISTS">
   <key column="TRACK_ID"/>
   <many-to-many class="com.oreilly.hh.data.Artist" column="ARTIST_ID" unique="false"/>
  </set>
  <property generated="never" lazy="false" name="added" type="date">
   <meta attribute="field-description">When the track was created</meta>
  </property>
  <property generated="never" lazy="false" name="volume" type="com.oreilly.hh.StereoVolumeType">
   <meta attribute="field-description">How loud to play the track</meta>
   <meta attribute="use-in-tostring">true</meta>
   <column name="VOL_LEFT"/>
   <column name="VOL_RIGHT"/>
  </property>
  <property generated="never" lazy="false" name="sourceMedia" type="com.oreilly.hh.SourceMediaType">
   <meta attribute="field-description">Media on which track was obtained</meta>
   <meta attribute="use-in-tostring">true</meta>
  </property>
  <set name="comments" sort="unsorted" table="TRACK_COMMENTS">
   <key column="TRACK_ID"/>
   <element column="COMMENT" type="string"/>
  </set>
 </class>
 <query name="com.oreilly.hh.tracksNoLongerThan">
        select track.id, track.title from Track as track
        where track.playTime &lt;= :length
        order by track.title desc
      </query>
 <query name="com.oreilly.hh.trackSummary">
        select count(*), min(track.playTime), max(track.playTime)
        from Track as track
        where :artist in elements(track.artists)
      </query>
<!--  <sql-query
   name="com.oreilly.hh.tracksEndingAt">select {track.*}
        from TRACK as {track}
        where SECOND({track}.PLAYTIME) = :seconds<return
   alias="track" class="com.oreilly.hh.data.Track" entity-name=""/>
 </sql-query> -->
</hibernate-mapping>
